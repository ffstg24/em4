// (c) Max Fleig
// Script basiert auf "LASiren.script" aus der LA Mod 2.0:				
// 		Script by Bass-Ti	
//		Modified by Hoppah																		

const char EACTION_FINDPATH[] 		= "EActionFindPath";
const char EACTION_EXTINGUISH[] 	= "EActionExtinguish";
const char DUMMY_HASSIREN[] 		= "DUMMYSirenOn";
const char DUMMY_UPDATEPOS[] 		= "SOSIUpdatePos";
const char DUMMY_FINDPATH[] 		= "DummyFindPath";
const char NAME_DUMMYOBJECT[] 		= "HelpingObjekt_Hoppah";

int DummyGroup = 23;

object SOSISiren : CommandScript
{
	SOSISiren()
	{
		SetIcon("siren");
		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetPossibleCallers(ACTOR_VEHICLE);
	}

	bool CheckPossible(GameObject *Caller)
	{
		if (!Caller->IsValid())
			return false;

		return true;
	}

	bool CheckGroupVisibility(GameObject *Caller)
	{
		return true;
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if (!Target->IsValid() || Target->GetID() != Caller->GetID())
			return false;

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vehicle v(Caller);
		
		if (!v.HasCommand(DUMMY_HASSIREN)&&!childID)
		{
			v.SetSpeed(v.GetSpeed()*2);

			if (!v.IsBlueLightEnabled())
			{
				v.EnableBlueLights(true);
			}

			int soundID;
			Vector CarPos = v.GetPosition();

			//Fahrzeugblock Start
 			if (StrCompare(Caller->GetName(), 		"stg11") == 0)
 			{
				int random = Math::rand()%3;
				if (random == 0){soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/l620.wav", CarPos, true);}
				else if(random == 1){soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/s620.wav", CarPos, true);}
				else {soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/martin1.wav", CarPos, true);}
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg442") == 0)
 			{
				soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/442.wav", CarPos, true);
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg33") == 0)
 			{
				soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/martin2.wav", CarPos, true);
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg24") == 0)
 			{
				soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/martin1.wav", CarPos, true);
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg441") == 0)
 			{
				int random = Math::rand()%2;
				if (random == 0){soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/441.wav", CarPos, true);}
				else {soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/starkton1.wav", CarPos, true);}
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg61") == 0)
 			{
				soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/starkton1.wav", CarPos, true);
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg59") == 0)
 			{
				soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/martin3.wav", CarPos, true);
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg49") == 0)
 			{
				int random = Math::rand()%2;
				if (random == 0){soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/49_land.wav", CarPos, true);}
				else {soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/49_stadt.wav", CarPos, true);}
 			}
 			else if (StrCompare(Caller->GetName(), 	"stg19") == 0)
 			{
				int random = Math::rand()%2;
				if (random == 0){soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/l620.wav", CarPos, true);}
				else {soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/s620.wav", CarPos, true);}
 			}
 			else if (StrCompare(Caller->GetName(), 	"ls40") == 0)
 			{
				int random = Math::rand()%2;
				if (random == 0){soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/l620.wav", CarPos, true);}
				else {soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/s620.wav", CarPos, true);}
 			}

 			//Fahrzeugblock Ende

 			else
 			{
 				soundID = Audio::PlaySample3D("mod:Audio/FX/Sondersignal/empty.wav", CarPos, true);
 				System::Log("Sosi nicht gefunden!");
 			}

 			int CarID = v.GetID();
			GameObject mDummy =  Game::CreateObject("mod:Prototypes/Objects/Misc/empty.e4p", NAME_DUMMYOBJECT);
			v.AssignCommand(DUMMY_HASSIREN);
			v.SetUserData(soundID);
			mDummy.Hide();
			//mDummy.SetUserData(v.GetID());
			mDummy.SetUserData(soundID);
			mDummy.AttachSound(soundID);
			mDummy.PushActionExecuteCommand(ACTION_NEWLIST, DUMMY_UPDATEPOS, &v, 0, false);
			return;
 		}
		if (v.HasCommand(DUMMY_HASSIREN)||childID&&childID!=2)
		{
			v.SetSpeed(v.GetSpeed()/2);
			System::Log("Stop sample via SOSISiren");
			int CarID = v.GetUserData();
			int ref = v.GetUserData();
			v.UnattachSound(ref);
			Audio::StopSample(ref);
			int mSirTest;
			GameObjectList list = Game::GetGameObjects(NAME_DUMMYOBJECT);
			for(int i=0; i<list.GetNumObjects(); i++)
			{
				GameObject *obj = list.GetObject(i);
				if (obj->GetUserData() == CarID)
				{
					mSirTest = i;
				}
			}

			if(list.GetNumObjects()>0)
			{
				GameObject *obj = list.GetObject(mSirTest);
				obj->PushActionDeleteOwner(ACTION_NEWLIST);
			}

			if (v.HasCommand(DUMMY_HASSIREN))
				v.RemoveCommand(DUMMY_HASSIREN);

			return;
		}
	}
};

object SOSIUpdatePos : CommandScript
{
	SOSIUpdatePos()
	{
		SetGroupID(DummyGroup);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
	}

  	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vehicle v(Target);
		GameObject mDummy(Caller);

		if (v.IsDestroyed() || !v.IsValid())
		{
			int ref = mDummy.GetUserData();
			mDummy.UnattachSound(ref);
			Audio::StopSample(ref);

			if (v.HasCommand(DUMMY_HASSIREN))
				v.RemoveCommand(DUMMY_HASSIREN);

			mDummy.PushActionDeleteOwner(ACTION_NEWLIST);
		} 
		else
		  {
			if (v.IsCurrentAction(EACTION_FINDPATH))
			{
				if (!v.HasCommand(DUMMY_FINDPATH))
				{
					v.AssignCommand(DUMMY_FINDPATH);
				}
			}
			Vector vPos = v.GetPosition();
			mDummy.SetPosition(vPos);
			mDummy.PushActionExecuteCommand(ACTION_NEWLIST, DUMMY_UPDATEPOS, Target, childID, false);
		  }

		if (v.HasCommand(DUMMY_FINDPATH))
		{
			if ((!v.IsCurrentAction(EACTION_FINDPATH) && (v.GetNumActions() == 0 || v.IsCurrentAction(EACTION_EXTINGUISH))) || !v.IsBlueLightEnabled())
			{
				v.SetSpeed(v.GetSpeed()/2);
				
				if (v.HasCommand(DUMMY_HASSIREN))
					v.RemoveCommand(DUMMY_HASSIREN);

				if (v.HasCommand(DUMMY_FINDPATH))
					v.RemoveCommand(DUMMY_FINDPATH);

				int CarID = v.GetUserData();
				int ref = v.GetUserData();
				v.UnattachSound(ref);
				Audio::StopSample(ref);

				GameObjectList list = Game::GetGameObjects(NAME_DUMMYOBJECT);
				for(int i = 0; i < list.GetNumObjects(); i++)
				{
					int mSirTest;
					GameObject *obj = list.GetObject(i);
					if (obj->GetUserData() == CarID)
					{
						mSirTest = i;
						GameObject *obj = list.GetObject(mSirTest);
						obj->PushActionDeleteOwner(ACTION_NEWLIST);
						if (v.HasCommand(DUMMY_HASSIREN))
							v.RemoveCommand(DUMMY_HASSIREN);
						if (v.HasCommand(DUMMY_FINDPATH))
							v.RemoveCommand(DUMMY_FINDPATH);
					}
				}
			}
		}
	}
};

object SOSIBluelights : CommandScript
{
	SOSIBluelights()
	{
		SetIcon("bluelights");
		SetRestrictions(RESTRICT_SELFEXECUTE);

	}
	bool CheckPossible(GameObject *Caller)
	{
		return true;
	}	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vehicle v(Caller);
		if(v.IsBlueLightEnabled()||childID)
			v.EnableBlueLights(false);
		else v.EnableBlueLights(true);
	}
};