object park : CommandScript
{
	park()
	{
		SetIcon("gohome");
		SetCursor("gohome");

		SetRestrictions(RESTRICT_SELFEXECUTE);
		SetPossibleCallers(ACTOR_VEHICLE);
	}
	bool CheckPossible(GameObject *Caller)
	{
		Vehicle v(Caller);
		PersonList pl = v.GetPassengers();
		PersonList tl = v.GetTransports();

		if(v.HasCommand("DUMMYInBase")||v.GetNumUsedConnectors()>0||tl.GetNumPersons()>0||
			pl.GetNumPersons()==0||v.IsDestroyed()||!v.IsValid())
			return false;
		return true;
	}	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(Caller->GetID()!=Target->GetID())
			return false;
		return true;
	}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		char pname[255];
		GameObject pVO;

		Vector apos(0,0,0);
		Vector tpos(0,0,0);

		Vehicle v(Caller);
		bool ParksOnMap = false;
		System::Log(v.GetName());
		if (StrCompare(v.GetName(),"stg11")==0||StrCompare(v.GetName(),"stg442")==0||StrCompare(v.GetName(),"stg33")==0||StrCompare(v.GetName(),"stg24")==0||
		StrCompare(v.GetName(),"stg441")==0||StrCompare(v.GetName(),"stg61")==0||StrCompare(v.GetName(),"stg59")==0||StrCompare(v.GetName(),"stg49")==0)
		{
			Vector amod(-600,-300,0);
			Vector tmod(-1200,-600,0);
			apos=amod;
			tpos=tmod;
			ParksOnMap = true;
		}
		else if (StrCompare(v.GetName(),"stg19")==0/*||StrCompare(DRK-Fzg!)*/)
		{
			
			Vector amod(200,-400,0);
			Vector tmod(400,-800,0);
			apos=amod;
			tpos=tmod;
			ParksOnMap = true;
		}

		if(ParksOnMap)
		{
			snprintf(pname, 255, "p_%s", v.GetName());
			GameObjectList ol(pname);
			pVO = ol.GetObject(0);

			//Game::FindFreePosition(&v, pVO);
			v.PushActionExecuteCommand(ACTION_NEWLIST, "DUMMYAvailable", &v, 1, false);
			v.PushActionExecuteCommand(ACTION_APPEND, "SOSISiren", &v, 1, false);
			v.PushActionWait(ACTION_APPEND, 1.0);
			v.PushActionExecuteCommand(ACTION_APPEND, "SOSIBluelights", &v, 1, false);
			v.PushActionMove(ACTION_APPEND, pVO.GetPosition()+apos);
			v.PushActionExecuteCommand(ACTION_INSERT, "gate", Caller, 1, false);
			v.PushActionWait(ACTION_APPEND, 4.0);
			v.PushActionTurnTo(ACTION_APPEND, pVO.GetPosition()+tpos, 3.0);
			v.PushActionMove(ACTION_APPEND, pVO.GetPosition());
			v.PushActionTurnTo(ACTION_APPEND, pVO.GetPosition()+tpos);
			v.PushActionExecuteCommand(ACTION_APPEND, "deletePassengers", &v, 0, false);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYInBase", &v, 1, false);
			v.PushActionExecuteCommand(ACTION_APPEND, "DUMMYAvailable", &v, 0, false);
			v.PushActionWait(ACTION_APPEND, 4.0);
			v.PushActionExecuteCommand(ACTION_INSERT, "gate", Caller, 0, false);
		}

		
		/*
		else 
		{
			//Externe Fahrzeuge
		}
		*/

	}
};
object deletePassengers : CommandScript
{
	bool CheckPossible(GameObject *Caller){return false;}	
	bool CheckTarget(GameObject *Caller, Actor *Target, int childID){return false;}
	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vehicle v(Caller);
		PersonList pl = v.GetPassengers();
		for(int i = 0; i < pl.GetNumPersons(); ++i)
		{
			Person p = pl.GetPerson(i);
			v.RemovePassenger(&p);
			p.PushActionDeleteOwner(ACTION_NEWLIST);
		}
	}
};